{"version":3,"file":"static/js/642.9f389d09.chunk.js","mappings":"2OAMaA,EAAS,WAAO,IAAD,EACxB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,qBAApB,QAAqC,GAC1CC,GAAWC,EAAAA,EAAAA,MAyBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACQ,OAAVJ,GAA4B,KAAVA,IAGtBK,EAAAA,EAAAA,IAAoBL,GACfM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAEF,GADAC,QAAQC,IAAIX,IACPS,EACD,MAAM,IAAIG,MAAM,wBAEhBhB,EAAUa,EAAKI,QAEtB,IACAC,OAAM,SAAAC,GAAK,OAAIL,QAAQC,IAAII,EAAhB,GACnB,GAAE,CAACf,KAGA,iCACI,kBAAMgB,SAzBO,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACfrB,EAAgB,CAAEsB,WAAYF,EAAKG,SAASD,WAAWE,QACvDJ,EAAKK,OACR,EAoBO,WACI,kBAAOC,KAAK,OAAOC,KAAK,gBACxB,mBAAQD,KAAK,SAAb,uBAGHzB,IACG,wBACKL,EAAOgC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOH,EAAd,EAAcA,KAAd,OACR,yBACI,SAAC,KAAD,CACII,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAM9B,GAFnB,SAIK2B,GAASH,KALTE,EADD,OAYpB,SAAC,EAAAK,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAIf,C,uJC5DD,IAAMC,EAAW,+BACXC,EAAU,mCAEHC,EAAc,WACvB,OAAOC,MAAM,GAAD,OAAIH,EAAJ,qCAAyCC,GACxD,EAEYG,EAAkB,SAAAC,GAC3B,OAAOF,MAAM,GAAD,OAAIH,EAAJ,kBAAsBK,EAAtB,oBAAyCJ,GACxD,EAEYK,EAAoB,SAAAD,GAC7B,OAAOF,MAAM,GAAD,OAAIH,EAAJ,kBAAsBK,EAAtB,4BAAiDJ,GAChE,EACYM,EAAuB,SAAAF,GAChC,OAAOF,MAAM,GAAD,OAAIH,EAAJ,kBAAsBK,EAAtB,4BAAiDJ,GAChE,EACY/B,EAAsB,SAAAgB,GAC/B,OAAOiB,MAAM,GAAD,OACLH,EADK,iCAC4BC,EAD5B,kBAC6Cf,GAE5D,C","sources":["components/pages/Movies/Movies.jsx","services/moviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { fetchMoviesBySearch } from 'services/moviesApi';\nimport { Link, Outlet } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nexport const Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const event = searchParams.get('searchText') ?? '';\n    const location = useLocation();\n\n    const handleSubmit = e => {\n        e.preventdefault();\n        const form = e.target;\n        setSearchParams({ searchText: form.elements.searchText.value });\n        form.reset();\n    };\n    useEffect(() => {\n        if (event === null && event === '') {\n            return;\n        }\n        fetchMoviesBySearch(event)\n            .then(response => response.json())\n            .then(data => {\n                console.log(event);\n                if (!data) {\n                    throw new Error('Movie is not defined');\n                } else {\n                    setMovies(data.results);\n                }\n            })\n            .catch(error => console.log(error));\n    }, [event]);\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"searchText\" />\n                <button type=\"submit\">Search</button>\n            </form>\n\n            {event && (\n                <ul>\n                    {movies.map(({ id, title, name }) => (\n                        <li key={id}>\n                            <Link\n                                to={`/movies/${id}`}\n                                state={{ from: location }}\n                            >\n                                {title || name}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            )}\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n};\n","// import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bdc0e4e9aaa7667ff59f8bdca91622c0';\n\nexport const fetchMovies = () => {\n    return fetch(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMoviesById = movieId => {\n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchMoviesByCast = movieId => {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\nexport const fetchMoviesByReviews = movieId => {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\nexport const fetchMoviesBySearch = searchText => {\n    return fetch(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchText}`\n    );\n};"],"names":["Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","event","get","location","useLocation","useEffect","fetchMoviesBySearch","then","response","json","data","console","log","Error","results","catch","error","onSubmit","e","preventdefault","form","target","searchText","elements","value","reset","type","name","map","id","title","to","state","from","Suspense","fallback","BASE_URL","API_KEY","fetchMovies","fetch","fetchMoviesById","movieId","fetchMoviesByCast","fetchMoviesByReviews"],"sourceRoot":""}