{"version":3,"file":"static/js/243.84810ef4.chunk.js","mappings":"0OAOaA,EAAgB,WACzB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAqBH,GAChBI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAEF,GADAC,QAAQC,IAAIF,IACPA,EACD,MAAM,IAAIG,MAAM,wBAEhBX,EAAWQ,EAAKI,QAEvB,IACAC,OAAM,SAAAC,GAAK,OAAIL,QAAQC,IAAII,EAAhB,GACnB,GAAE,CAACb,KAGA,gCACKF,IACG,+BACI,4BACI,wBACKA,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACI,wBAAKD,KACL,uBAAIC,MAFCF,EADA,OAOjB,SAAC,EAAAG,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,WAKI,IAAnBrB,EAAQsB,SACL,sEAIf,C,uJChDD,IAAMC,EAAW,+BACXC,EAAU,mCAEHC,EAAc,WACvB,OAAOC,MAAM,GAAD,OAAIH,EAAJ,qCAAyCC,GACxD,EAEYG,EAAkB,SAAAzB,GAC3B,OAAOwB,MAAM,GAAD,OAAIH,EAAJ,kBAAsBrB,EAAtB,oBAAyCsB,GACxD,EAEYI,EAAoB,SAAA1B,GAC7B,OAAOwB,MAAM,GAAD,OAAIH,EAAJ,kBAAsBrB,EAAtB,4BAAiDsB,GAChE,EACYnB,EAAuB,SAAAH,GAChC,OAAOwB,MAAM,GAAD,OAAIH,EAAJ,kBAAsBrB,EAAtB,4BAAiDsB,GAChE,EACYK,EAAsB,SAAAC,GAC/B,OAAOJ,MAAM,GAAD,OACLH,EADK,iCAC4BC,EAD5B,kBAC6CM,GAE5D,C","sources":["components/pages/ReviewsMovies/ReviewsMovies.jsx","services/moviesApi.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesByReviews } from '../../../services/moviesApi';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nexport const ReviewsMovies = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        fetchMoviesByReviews(movieId)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                if (!data) {\n                    throw new Error('Movie is not defined');\n                } else {\n                    setReviews(data.results);\n                }\n            })\n            .catch(error => console.log(error));\n    }, [movieId]);\n\n    return (\n        <>\n            {reviews && (\n                <>\n                    <div>\n                        <ul>\n                            {reviews.map(({ id, author, content }) => (\n                                <li key={id}>\n                                    <h3>{author}</h3>\n                                    <p>{content}</p>\n                                </li>\n                            ))}\n                        </ul>\n                        <Suspense fallback={<div>Loading...</div>}>\n                            <Outlet />\n                        </Suspense>\n                    </div>\n                </>\n            )}\n            {reviews.length === 0 && (\n                <p>We don`t have any reviews for this movie</p>\n            )}\n        </>\n    );\n};\n","// import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bdc0e4e9aaa7667ff59f8bdca91622c0';\n\nexport const fetchMovies = () => {\n    return fetch(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMoviesById = movieId => {\n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchMoviesByCast = movieId => {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\nexport const fetchMoviesByReviews = movieId => {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\nexport const fetchMoviesBySearch = searchText => {\n    return fetch(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchText}`\n    );\n};"],"names":["ReviewsMovies","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMoviesByReviews","then","response","json","data","console","log","Error","results","catch","error","map","id","author","content","Suspense","fallback","length","BASE_URL","API_KEY","fetchMovies","fetch","fetchMoviesById","fetchMoviesByCast","fetchMoviesBySearch","searchText"],"sourceRoot":""}