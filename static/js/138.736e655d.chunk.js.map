{"version":3,"file":"static/js/138.736e655d.chunk.js","mappings":"iPAOaA,EAAe,WACxB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBP,GACXQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAEF,GADAC,QAAQC,IAAIF,IACPA,EACD,MAAM,IAAIG,MAAM,wBAEhBf,EAASY,EAEhB,IACAI,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,EAAhB,GACnB,GAAE,CAAChB,KAGA,iCACI,mBACIiB,QAAS,0BAAMf,EAAQ,oBAACE,EAASc,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,IAAvC,EADb,qBAKCrB,IACG,iCACI,iBACIsB,MAAO,CACHC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,MAAO,WALf,WAQI,gBACIC,IACI3B,EAAM4B,YACA,sCACA5B,EAAM4B,YACN,sCAEVC,IAAK7B,EAAM8B,OAAS9B,EAAM+B,KAC1BC,MAAM,SAEV,iBACIV,MAAO,CACHW,QAAS,QAFjB,UAKK,KACD,wBAAKjC,EAAMkC,gBAAkBlC,EAAM+B,QACnC,sCACA,uBAAI/B,EAAMmC,YACV,oCACA,wBACKnC,EAAMoC,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIP,EAAP,EAAOA,KAAP,OACd,wBAAcA,GAALO,EADK,aAM9B,2BACI,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAarC,EAAb,SAAR,qBAEJ,yBACI,SAAC,KAAD,CAAMqC,GAAE,kBAAarC,EAAb,YAAR,2BAKR,SAAC,EAAAsC,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,WAMvB,C,uJCvFD,IAAMC,EAAW,+BACXC,EAAU,mCAEHC,EAAc,WACvB,OAAOC,MAAM,GAAD,OAAIH,EAAJ,qCAAyCC,GACxD,EAEYlC,EAAkB,SAAAP,GAC3B,OAAO2C,MAAM,GAAD,OAAIH,EAAJ,kBAAsBxC,EAAtB,oBAAyCyC,GACxD,EAEYG,EAAoB,SAAA5C,GAC7B,OAAO2C,MAAM,GAAD,OAAIH,EAAJ,kBAAsBxC,EAAtB,4BAAiDyC,GAChE,EACYI,EAAuB,SAAA7C,GAChC,OAAO2C,MAAM,GAAD,OAAIH,EAAJ,kBAAsBxC,EAAtB,4BAAiDyC,GAChE,EACYK,EAAsB,SAAAC,GAC/B,OAAOJ,MAAM,GAAD,OACLH,EADK,iCAC4BC,EAD5B,kBAC6CM,GAE5D,C","sources":["components/pages/MovieDetails/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesById } from '../../../services/moviesApi';\nimport { Link, Outlet, useNavigate, useLocation } from 'react-router-dom';\n\nexport const MovieDetails = () => {\n    const [movie, setMovie] = useState('');\n    const { movieId } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    useEffect(() => {\n        fetchMoviesById(movieId)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                if (!data) {\n                    throw new Error('Movie is not defined');\n                } else {\n                    setMovie(data);\n                }\n            })\n            .catch(error => console.log(error));\n    }, [movieId]);\n\n    return (\n        <>\n            <button\n                onClick={() => navigate(location.state?.from ?? '/')}\n            >\n                Go back\n            </button>\n            {movie && (\n                <>\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            color: '#010101',\n                        }}\n                    >\n                        <img\n                            src={\n                                movie.poster_path\n                                    ? 'https://image.tmdb.org/t/p/original' +\n                                      movie.poster_path\n                                    : 'https://orten.in.ua/default-img.png'\n                            }\n                            alt={movie.title || movie.name}\n                            width=\"240\"\n                        />\n                        <div\n                            style={{\n                                padding: '10px',\n                            }}\n                        >\n                            {' '}\n                            <h2>{movie.original_title || movie.name}</h2>\n                            <h4>Overview</h4>\n                            <p>{movie.overview}</p>\n                            <h4>Genres</h4>\n                            <ul>\n                                {movie.genres.map(({ id, name }) => (\n                                    <li key={id}>{name}</li>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                    <ul>\n                        <li>\n                            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n                        </li>\n                        <li>\n                            <Link to={`/movies/${movieId}/reviews`}>\n                                Reviews\n                            </Link>\n                        </li>\n                    </ul>\n                    <Suspense fallback={<div>Loading...</div>}>\n                        <Outlet />\n                    </Suspense>\n                </>\n            )}\n        </>\n    );\n};\n","// import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bdc0e4e9aaa7667ff59f8bdca91622c0';\n\nexport const fetchMovies = () => {\n    return fetch(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMoviesById = movieId => {\n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchMoviesByCast = movieId => {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\nexport const fetchMoviesByReviews = movieId => {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\nexport const fetchMoviesBySearch = searchText => {\n    return fetch(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchText}`\n    );\n};"],"names":["MovieDetails","useState","movie","setMovie","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","fetchMoviesById","then","response","json","data","console","log","Error","catch","error","onClick","state","from","style","display","justifyContent","alignItems","color","src","poster_path","alt","title","name","width","padding","original_title","overview","genres","map","id","to","Suspense","fallback","BASE_URL","API_KEY","fetchMovies","fetch","fetchMoviesByCast","fetchMoviesByReviews","fetchMoviesBySearch","searchText"],"sourceRoot":""}