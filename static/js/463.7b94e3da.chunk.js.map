{"version":3,"file":"static/js/463.7b94e3da.chunk.js","mappings":"8NACA,EAA+B,iCAA/B,EAAmF,qCAAnF,EAAgI,0B,SCOnHA,EAAa,WACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBH,GACbI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAEF,GADAC,QAAQC,IAAIF,IACPA,EACD,MAAM,IAAIG,MAAM,wBAEhBX,EAAUQ,EAAKI,KAEtB,IACAC,OAAM,SAAAC,GAAK,OAAIL,QAAQC,IAAII,EAAhB,GACnB,GAAE,CAACb,KAGA,iBAAKc,UAAWC,EAAhB,WACI,gBAAID,UAAWC,EAAf,UACuB,IAAlBjB,EAAOkB,SACJ,oEAEHlB,EAAOmB,KACJ,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,GAA3C,OACI,gBAEIP,UAAWC,GAAwBA,EAFvC,WAII,gBACIO,IACIF,EACM,sCACAA,EACA,sEAEVG,IAAKL,EACLM,MAAM,SAEV,wBAAKL,KACL,uBAAID,MAdCG,EAFb,QAqBR,SAAC,EAAAI,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAIf,C,uJC1DD,IAAMC,EAAW,+BACXC,EAAU,mCAEHC,EAAc,WACvB,OAAOC,MAAM,GAAD,OAAIH,EAAJ,qCAAyCC,GACxD,EAEYG,EAAkB,SAAA/B,GAC3B,OAAO8B,MAAM,GAAD,OAAIH,EAAJ,kBAAsB3B,EAAtB,oBAAyC4B,GACxD,EAEYzB,EAAoB,SAAAH,GAC7B,OAAO8B,MAAM,GAAD,OAAIH,EAAJ,kBAAsB3B,EAAtB,4BAAiD4B,GAChE,EACYI,EAAuB,SAAAhC,GAChC,OAAO8B,MAAM,GAAD,OAAIH,EAAJ,kBAAsB3B,EAAtB,4BAAiD4B,GAChE,EACYK,EAAsB,SAAAC,GAC/B,OAAOJ,MAAM,GAAD,OACLH,EADK,iCAC4BC,EAD5B,kBAC6CM,GAE5D,C","sources":["webpack://goit-react-hw-05-movies/./src/components/pages/CastMovies/CastMovies.module.css?07e9","components/pages/CastMovies/CastMovies.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"imageGallery\":\"CastMovies_imageGallery__EBdr3\",\"imageGalleryItem\":\"CastMovies_imageGalleryItem__2pinR\",\"colum\":\"CastMovies_colum__gP7gn\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesByCast } from '../../../services/moviesApi';\nimport { Outlet } from 'react-router-dom';\nimport css from './CastMovies.module.css';\n\nexport const CastMovies = () => {\n    const [actors, setActors] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        fetchMoviesByCast(movieId)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                if (!data) {\n                    throw new Error('Movie is not defined');\n                } else {\n                    setActors(data.cast);\n                }\n            })\n            .catch(error => console.log(error));\n    }, [movieId]);\n\n    return (\n        <div className={css.colum}>\n            <ul className={css.imageGallery}>\n                {actors.length === 0 && (\n                    <p>We don`t have information about the cast</p>\n                )}\n                {actors.map(\n                    ({ character, original_name, profile_path, id }) => (\n                        <li\n                            key={id}\n                            className={css.imageGalleryItem && css.colum}\n                        >\n                            <img\n                                src={\n                                    profile_path\n                                        ? 'https://image.tmdb.org/t/p/original' +\n                                          profile_path\n                                        : 'https://upload.wikimedia.org/wikipedia/commons/2/2c/Default_pfp.svg'\n                                }\n                                alt={character}\n                                width=\"150\"\n                            />\n                            <h3>{original_name}</h3>\n                            <p>{character}</p>\n                        </li>\n                    )\n                )}\n            </ul>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />\n            </Suspense>\n        </div>\n    );\n};\n","// import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bdc0e4e9aaa7667ff59f8bdca91622c0';\n\nexport const fetchMovies = () => {\n    return fetch(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMoviesById = movieId => {\n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchMoviesByCast = movieId => {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\nexport const fetchMoviesByReviews = movieId => {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\nexport const fetchMoviesBySearch = searchText => {\n    return fetch(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchText}`\n    );\n};"],"names":["CastMovies","useState","actors","setActors","movieId","useParams","useEffect","fetchMoviesByCast","then","response","json","data","console","log","Error","cast","catch","error","className","css","length","map","character","original_name","profile_path","id","src","alt","width","Suspense","fallback","BASE_URL","API_KEY","fetchMovies","fetch","fetchMoviesById","fetchMoviesByReviews","fetchMoviesBySearch","searchText"],"sourceRoot":""}